{"version":3,"sources":["config/config.js","auth/Field.jsx","auth/Auth.jsx","game/Goals.jsx","game/Game.jsx","App.js","serviceWorker.js","index.js"],"names":["config","Field","props","react_default","a","createElement","className","title","value","onChange","Auth","_useState","useState","authPage","login","firstName","lastName","pass","_useState2","Object","slicedToArray","state","setState","onLoginChange","event","target","nativeEvent","setField","onPassChange","fieldName","fieldValue","prevState","objectSpread","defineProperty","send","_ref","asyncToGenerator","regenerator_default","mark","_callee","apiUrl","wrap","_context","prev","next","Config","axios","post","id","v4","password","sent","concat","stop","apply","this","arguments","onClick","style","fontWeight","auth_Field","secondName","Goals","Fragment","goals","filter","item","side","length","join","role","_x","_x2","Game","players","slots","red","attack","def","black","forEach","player","game_Goals","status","disabled","App","user","undefined","get","gameData","data","console","log","game_Game","auth_Auth","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80faeedc.chunk.js","sourcesContent":["export default {\n    api_url: \"http://localhost:8888/api\"\n}\n","import React from 'react';\n\nconst Field = props => {\n    return (\n        <div className='field_root'>\n            <div className='field_title'>{props.title}</div>\n            <input\n                className='field_input'\n                value={props.value}\n                onChange={props.onChange}\n            /> \n        </div>\n    );\n}\n\nexport default Field;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { v4 } from 'uuid';\n\nimport Config from '../config/config';\n\nimport Field from './Field';\n\nconst Auth = props => {\n    const [state, setState] = useState({\n        authPage: 'reg',\n        login: '',\n        firstName: '',\n        lastName: '',\n        pass: ''\n    });\n\n    const onLoginChange = (event) => {\n        const target = event.nativeEvent ? event.nativeEvent.target : event.target;\n\n        setField('login', target.value);\n    }\n\n    const onFirstNameChange = (event) => {\n        const target = event.nativeEvent ? event.nativeEvent.target : event.target;\n\n        setField('firstName', target.value);\n    }\n\n    const onSecondNameChange = (event) => {\n        const target = event.nativeEvent ? event.nativeEvent.target : event.target;\n\n        setField('secondName', target.value);\n    }\n\n    const onPassChange = (event) => {\n        const target = event.nativeEvent ? event.nativeEvent.target : event.target;\n\n        setField('pass', target.value);\n    }\n\n    const setField = (fieldName, fieldValue) => {\n        setState((prevState) => ({\n            ...prevState,\n            [fieldName]: fieldValue,\n        }));\n    }\n\n    const send = async() => {\n\n        let apiUrl = Config.api_url;\n        let res;\n\n        if (state.authPage === 'reg') {\n            res = await axios.post(apiUrl + '/user', {\n                id: v4(),\n                login: state.login,\n                password: state.pass,\n                firstName: state.firstName,\n                lastName: state.lastName\n            });\n        } else {\n            res = await axios.post(`${apiUrl}/auth/${state.login}`, {\n                password: state.pass\n            });\n        }\n\n        // props.authentificate(res.data.user);\n    }\n\n    return (\n        <div className='auth_root'>\n            <div className='auth_togglerWrapper'>\n                <div\n                    onClick={() => setField('authPage', 'auth')}\n                    style={state.authPage === 'auth' ? {fontWeight: 'bold'} : {} }\n                    className='auth_toggler'\n                >\n                    auth\n                </div>\n                <div\n                    onClick={() => setField('authPage', 'reg')}\n                    style={state.authPage === 'reg' ? {fontWeight: 'bold'} : {} }\n                    className='auth_toggler'\n                >\n                    reg\n                </div>\n            </div>\n            {state.authPage === 'reg'\n                ? (\n                    <div className='auth_reg'>\n                        <Field\n                            title='login'\n                            value={state.login}\n                            onChange={onLoginChange}\n                        />\n                        <Field\n                            title='first name'\n                            value={state.firstName}\n                            onChange={onFirstNameChange}\n                        />\n                        <Field\n                            title='second name'\n                            value={state.secondName}\n                            onChange={onSecondNameChange}\n                        />\n                        <Field\n                            title='password'\n                            value={state.pass}\n                            onChange={onPassChange}\n                        />\n                    </div>\n                )\n                : (\n                    <div className='auth_reg'>\n                        <Field\n                            title='login'\n                            value={state.login}\n                            onChange={onLoginChange}\n                        />\n                        <Field\n                            title='password'\n                            value={state.pass}\n                            onChange={onPassChange}\n                        />\n                    </div>\n                )\n            }\n\n            <button onClick={() => send()}>\n                send\n            </button>\n        </div>\n    );\n}\n\nexport default Auth;\n","import React from 'react';\n\nconst Goals = props => {\n    return (\n        <>\n            <div>{props.goals.filter(item => item.side === 'defence').length}</div>\n            -\n            <div>{props.goals.filter(item => item.side === 'attack').length}</div>\n        </>\n    );\n};\n\nexport default Goals;","import React from 'react';\nimport axios from 'axios';\n\nimport Player from './Player';\nimport Goals from './Goals';\n\nimport Config from '../config/config';\n\nconst join = async (role, side) => {\n    await axios.post(Config.api_url + '/game', {\n        role: role,\n        side: side\n    });\n}\n\nconst Game = props => {\n    const { players } = props;\n\n    const slots = {\n        red: {\n            attack: null,\n            def: null\n        },\n        black: {\n            attack: null,\n            def: null\n        }\n    };\n\n    players.forEach((player) => {\n        if (player.side === 'BLACK') {\n            if (player.role === 'attack') {\n                slots.black.attack = player;\n            } else {\n                slots.black.def = player;\n            }\n        } else {\n            if (player.role === 'attack') {\n                slots.red.attack = player;\n            } else {\n                slots.red.def = player;\n            }\n        }\n    });\n\n    return (\n        <div className='game_root'>\n            <div className='game_title'>kicker.lan</div>\n\n            <Goals goals={props.goals} />\n\n            <div>{props.status}</div>\n\n            <button\n                disabled={!!slots.red.attack}\n                onClick={() => { join('attack', 'RED') }}\n            >\n                Join (red attack)\n        </button>\n            <button\n                disabled={!!slots.red.def}\n                onClick={() => { join('defense', 'RED') }}\n            >\n                Join (red def)\n        </button>\n            <button\n                disabled={!!slots.black.attack}\n                onClick={() => { join('attack', 'BLACK') }}\n            >\n                Join (black attack)\n        </button>\n            <button\n                disabled={!!slots.black.def}\n                onClick={() => { join('defense', 'BLACK') }}\n            >\n                Join (black def)\n        </button>\n        </div>\n    );\n}\n\nexport default Game;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Config from './config/config';\n\nimport Auth from './auth/Auth';\nimport Game from './game/Game';\n\nclass App extends Component {\n\n  state = {\n    players: [],\n    goals: [],\n    status: 'ready',\n    user: undefined\n  };\n\n\n  async componentDidMount() {\n\n    const { data: gameData } = await axios.get(Config.api_url + '/game');\n    let user;\n    try {\n      user = (await axios.get(Config.api_url + '/auth')).data.user;\n    } catch (error) {\n      user = null;\n    }\n\n    console.log(gameData);\n\n    this.setState({\n      players: gameData.players,\n      goals: gameData.goals,\n      status: gameData.status,\n      user\n    });\n\n    console.log(this.state);\n  }\n\n  render() {\n    \n\n    return (\n      <div className=\"App\">\n      {this.state.user\n      ? <Game\n          players={this.state.players}\n          goals={this.state.goals}\n          status={this.state.status}\n          user={this.state.user}\n        />\n        : <Auth/>\n      }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}